/*
 * @copyright defined in LICENSE.txt
 */

plugins {
  id 'io.aergo.heraj.java-library-conventions'
  id "me.champeau.jmh" version "${jmhPluginVersion}" // micro bmt
  id 'com.google.protobuf' version "${protobufVersion}"
}

dependencies {
  implementation ("io.grpc:grpc-protobuf:${grpcVersion}")
  implementation ("io.grpc:grpc-stub:${grpcVersion}")
  implementation ("com.google.protobuf:protobuf-java:${protocVersion}")
  runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

  if (JavaVersion.current().isJava9Compatible()) {
    // Workaround for @javax.annotation.Generated
    // see: https://github.com/grpc/grpc-java/issues/3633 and https://github.com/grpc/grpc-java
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
  }
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:${protocVersion}"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        outputSubDir = 'java'
      }
    }
  }
}

// FIXME: custom disable options, it don't like it

tasks.withType(Javadoc).all { enabled = false }

checkstyle {
  sourceSets = []
}
